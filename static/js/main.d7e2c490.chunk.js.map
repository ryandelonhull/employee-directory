{"version":3,"sources":["utils/api.js","components/NavBar.js","components/TableRow.js","components/RandoTable.js","components/Data.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","navBar","searchRandos","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onChange","e","placeholder","TableRow","users","formatDate","date","dateArray","split","year","join","console","log","undefined","name","map","login","picture","phone","email","dob","data-th","src","medium","alt","first","last","target","uuid","RandoTable","sortColumn","Table","striped","bordered","hover","variant","onClick","Data","props","state","filteredUsers","order","heading","setState","sortedUsers","sort","compareFunc","self","a","b","localeCompare","event","filter","value","filterRandos","item","Object","values","toLowerCase","indexOf","sortColumnX","bind","API","then","results","data","this","NavBar","header","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7e2c490.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n    getRandos: function() {\n        return axios.get(\"https://randomuser.me/api/?results=15\")\n    }\n};\n\n","import React, { Component } from \"react\";\n\n\n\nfunction navBar ({searchRandos}) {\n    return (\n       \n            <div className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <a className=\"navbar-brand\" href=\"#\">Rando Commandos</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <form className=\"form-inline my-2 my-lg-0\">\n                        <input className=\"form-control mr-sm-2\" onChange={e => searchRandos(e)} type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n                    </form>\n                </div>\n            </div>\n      \n    )\n}\n\nexport default navBar;\n","import React from \"react\";\n\n\nfunction TableRow( users ) {\n     console.log(users);\n    function formatDate(date) {\n        const dateArray = date.split(\"-\");\n        const year = dateArray[0];\n        const month = dateArray[1];\n        const dayArray = dateArray[2].split(\"T\");\n        const day = dayArray[0];\n        const formattedDate = [month, day, year].join(\"-\");\n        return formattedDate;\n    }\n    return (\n        <tbody>\n            {users.users[0] !== undefined && users.users[0].name !== undefined ? (\n                users.users.map(({ login, name, picture, phone, email, dob }) => {\n                    return (\n                        <tr key={login.uuid}>\n                            <td data-th=\"Image\" className=\"align-middle\">\n                                <img\n                                    src={picture.medium}\n                                    alt={\"profile image for \" + name.first + \" \" + name.last}\n                                    className=\"img-responsive\"\n                                />\n                            </td>\n                            <td data-th=\"Name\" className=\"name-cell align-middle\">\n                                {name.first} {name.last}\n                            </td>\n                            <td data-th=\"Phone\" className=\"align-middle\">\n                                {phone}\n                            </td>\n                            <td data-th=\"Email\" className=\"align-middle\">\n                                <a href={\"mailto:\" + email} target=\"__blank\">\n                                    {email}\n                                </a>\n                            </td>\n                            <td data-th=\"DOB\" className=\"align-middle\">\n                                {formatDate(dob.date)}\n                            </td>\n                        </tr>\n                    );\n                })\n            ) : (\n                <></>\n            )}\n        </tbody>\n    );\n}\n\nexport default TableRow;\n","import React from \"react\";\n// import Data from \"./Data.js\";\nimport TableRow from \"./TableRow.js\";\nimport Table from 'react-bootstrap/Table';\n\n\nfunction RandoTable ({users, sortColumn}) {\n     console.log(users);\n     console.log(sortColumn);\n    return (\n        <Table striped bordered hover variant=\"dark\">\n            <thead>\n                <tr>\n                <th>Profile Picture</th>\n                <th onClick={()=> {sortColumn('name')}}>Name</th>\n                <th>Phone</th>\n                <th>Email</th>\n                <th>Date of Birth</th>\n                </tr>\n            </thead>\n            <TableRow users={users} />\n        </Table>\n    )\n}\nexport default RandoTable;","import React, {Component} from \"react\";\nimport API from \"../utils/api\"\nimport NavBar from \"./NavBar.js\";\nimport RandoTable from \"./RandoTable.js\";\n// import TableRow from \"./TableRow\";\n\nexport default class Data extends Component{\n    \n    state = {\n        users: [{}],\n        filteredUsers: [{}],\n        order: \"descent\"\n    };\n\n    constructor(props){\n\n        super(props);\n\n        \n\n        this.sortColumnX =  this.sortColumn.bind(this);\n\n    }\n\n\n    sortColumn = (heading) =>{\n        \n\n        if (this.state.order === \"descent\") {\n            this.setState({order: \"ascent\"}, ()=>{\n                const sortedUsers = this.state.filteredUsers.sort(compareFunc);\n                this.setState({filteredUsers: sortedUsers})\n            });\n        } else {\n            this.setState({order: \"descent\"}, ()=>{\n                const sortedUsers = this.state.filteredUsers.sort(compareFunc);\n                this.setState({filteredUsers: sortedUsers})\n            });\n        };\n\n        let self = this;\n        function compareFunc (a, b) {\n            if (self.state.order === \"ascent\") {\n                if (heading === \"name\") {\n                    return a[heading].first.localeCompare(b[heading].first);\n                  } else {\n                    return a[heading] - b[heading];\n                  }   \n            } else{\n                if (heading === \"name\") {\n                    return b[heading].first.localeCompare(a[heading].first);\n                  } else {\n                    return b[heading] - a[heading];\n                  }  \n            }\n        }\n\n       \n\n    };\n\n    componentDidMount() {\n        API.getRandos().then(results => {\n            // console.log(results.data.results);\n            this.setState({\n                users:results.data.results,\n                filteredUsers: results.data.results\n            });\n            // console.log(results.data.results);\n        });\n    };\n\n    searchRandos = (event) =>{\n        const filter = event.target.value;\n        const filterRandos = this.state.users.filter(item => {\n            let values = Object.values(item).join(\"\").toLowerCase();\n            return values.indexOf(filter.toLowerCase()) !== -1;\n        })\n        this.setState({filteredUsers: filterRandos});\n    };\n    \n   \n    render() {\n        let sortColumn = this.sortColumn;\n        return (\n            <div>\n                <NavBar searchRandos = {this.searchRandos}/>\n                <div>\n                <RandoTable\n                    users={this.state.filteredUsers}\n                    sortColumn={(header)=>sortColumn(header)}\n                />\n                </div>\n            </div>\n        );\n    };\n\n};   \n\n\n\n\n\n","import react from \"react\";\n// import NavBar from \"./components/NavBar.js\";\n// import Table from \"./components/Table.js\";\nimport Data from \"./components/Data.js\";\n// import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Data/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}